---
apiVersion: v1
kind: Service
metadata:
  name: flora
spec:
  selector:
    app: flora
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flora
  labels:
    app: flora
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flora
  template:
    metadata:
      labels:
        app: flora
    spec:
      # This section describes the containers that make up the deployment
      containers:
        - name: flora
          image: gcr.io/flora-287616/flora
          ports:
            - containerPort: 8000
          # Set env variables used for Postgres Connection
          env:
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: dbname
            - name: DB_HOST
              value: "localhost"
            - name: DB_PORT
              value: "5432"
            - name: DB_CONNECTION
              value: "pgsql"
            - name: GOOGLE_CLOUD_PROJECT_ID
              value: "flora-287616"
            - name: GOOGLE_CLOUD_STORAGE_BUCKET
              value: "flora-flora"
            - name: GOOGLE_CLOUD_KEY_FILE
              value: /var/www/key.json
        # Change <INSTANCE_CONNECTION_NAME> here to include your GCP
        # project, the region of your Cloud SQL instance and the name
        # of your Cloud SQL instance. The format is $PROJECT:$REGION:$INSTANCE
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "-instances=flora-287616:europe-north1:flora=tcp:5432",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          volumeMounts:
            - name: my-secrets-volume
              mountPath: /secrets/cloudsql
              readOnly: true
      volumes:
        - name: my-secrets-volume
          secret:
            secretName: cloudsql-instance-credentials
